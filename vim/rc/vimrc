
if !1 | finish | endif

" == Encoding settings. == {{{1
" Use utf-8.
if &encoding !=? 'utf-8'
  let &termencoding = &encoding
  setglobal encoding=utf-8
endif

scriptencoding utf-8

""--" A Vim Starting: --- {{{1
function! s:source_rc(path, ...) abort "{{{ 
	let use_global = get(a:000, 0, !has('vim_starting')) 
	let abspath = resolve(expand('~/.vim/rc/' . a:path)) 
	if !use_global 
		if filereadable(abspath)
			execute 'source' fnameescape(abspath) 
		endif
	 	return 
	endif 
	" substitute all 'set' to 'setglobal' 
	let content = map(readfile(abspath), 
		\ 'substitute(v:val, "^\\W*\\zsset\\ze\\W", "setglobal", "")') 
	" create tempfile and source the tempfile 
	let tempfile = tempname() 

	try 
		call writefile(content, tempfile) 
		execute 'source' fnameescape(tempfile) 
	finally 
		if filereadable(tempfile) 
			call delete(tempfile) 
		endif 
	endtry 

endfunction "}}} 

if has('vim_starting') 
	call s:source_rc('func.rc.vim') 
	call s:source_rc('init.rc.vim') 
endif 
""--" B Plugin Manager: vim-plug{{{1
""------------------------------------------------------------------------
" -- Prepare from shell
" $ curl -fLo ~/.dotfiles/vim/autoload/plug.vim --create-dirs \
"     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
"
call s:source_rc('plugin.vim')

" check the specified plugin is installed
function! s:is_plugged(name)
	return exists('g:plugs') && has_key(g:plugs, a:name) && isdirectory(g:plugs[a:name].dir)
endfunction

"-------------------------------------------------------------------------
" Tagbar Taglist:{{{1
"-------------------------------------------------------------------------
"source ~/.vim/rc/taglist.rc.vim

if s:is_plugged('tagbar')
	call s:source_rc('tagbar.rc.vim')
else
endif

if s:is_plugged('lightline.vim')
	call s:source_rc('lightline.rc.vim') 
	"-- g:lightline 変更後にテスト確認用
	command! -bar LightlineUpdate 
		\ call lightline#init()|
		\ call lightline#colorscheme()|
		\ call lightline#update()
else
endif

if s:is_plugged('vimfiler.vim')
	call s:source_rc('vimfiler.vim') 
else
	let g:WebDevIconsUnicodeDecorateFolderNodes = 1
endif

"}}}1 " Taglist:

call s:source_rc('option.vim')

"}}}1

call s:source_rc('keymap.vim')

"}}}1

" vim:foldmethod=marker:foldlevel=10
